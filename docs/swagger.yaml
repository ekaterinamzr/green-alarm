basePath: /api
definitions:
  dto.ChangeRoleRequest:
    properties:
      NewRole:
        type: integer
      id:
        type: integer
    type: object
  dto.CreateIncidentRequest:
    properties:
      author:
        example: "0"
        type: string
      comment:
        type: string
      country:
        type: string
      incident_date:
        type: string
      incident_name:
        type: string
      incident_status:
        example: "0"
        type: string
      incident_type:
        example: "0"
        type: string
      latitude:
        example: "0"
        type: string
      longitude:
        example: "0"
        type: string
    type: object
  dto.CreateIncidentResponse:
    properties:
      id:
        type: integer
    type: object
  dto.CreateRoleRequest:
    properties:
      role_name:
        type: string
    type: object
  dto.CreateRoleResponse:
    properties:
      id:
        type: integer
    type: object
  dto.CreateStatusRequest:
    properties:
      status_name:
        type: string
    type: object
  dto.CreateStatusResponse:
    properties:
      id:
        type: integer
    type: object
  dto.CreateTypeRequest:
    properties:
      type_name:
        type: string
    type: object
  dto.CreateTypeResponse:
    properties:
      id:
        type: integer
    type: object
  dto.GetIncidentByIdResponse:
    properties:
      author:
        type: integer
      comment:
        type: string
      country:
        type: string
      id:
        type: integer
      incident_date:
        type: string
      incident_name:
        type: string
      incident_status:
        type: integer
      incident_type:
        type: integer
      latitude:
        type: number
      longitude:
        type: number
      publication_date:
        type: string
    type: object
  dto.GetRoleByIdResponse:
    properties:
      id:
        type: integer
      role_name:
        type: string
    type: object
  dto.GetStatusByIdResponse:
    properties:
      id:
        type: integer
      status_name:
        type: string
    type: object
  dto.GetTypeByIdResponse:
    properties:
      id:
        type: integer
      type_name:
        type: string
    type: object
  dto.GetUserByIdResponse:
    properties:
      email:
        type: string
      first_name:
        type: string
      id:
        type: integer
      last_name:
        type: string
      user_password:
        type: string
      user_role:
        type: integer
      username:
        type: string
    type: object
  dto.Incident:
    properties:
      author:
        type: integer
      comment:
        type: string
      country:
        type: string
      id:
        type: integer
      incident_date:
        type: string
      incident_name:
        type: string
      incident_status:
        type: integer
      incident_type:
        type: integer
      latitude:
        type: number
      longitude:
        type: number
      publication_date:
        type: string
    type: object
  dto.IncidentStatus:
    properties:
      id:
        type: integer
      status_name:
        type: string
    type: object
  dto.IncidentType:
    properties:
      id:
        type: integer
      type_name:
        type: string
    type: object
  dto.SignInRequest:
    properties:
      user_password:
        type: string
      username:
        type: string
    type: object
  dto.SignInResponse:
    properties:
      id:
        type: integer
      role:
        type: integer
      token:
        type: string
    type: object
  dto.SignUpRequest:
    properties:
      email:
        type: string
      first_name:
        type: string
      last_name:
        type: string
      user_password:
        type: string
      username:
        type: string
    type: object
  dto.SignUpResponse:
    properties:
      id:
        type: integer
    type: object
  dto.UpdateIncidentRequest:
    properties:
      author:
        example: "0"
        type: string
      comment:
        type: string
      country:
        type: string
      id:
        type: integer
      incident_date:
        type: string
      incident_name:
        type: string
      incident_status:
        example: "0"
        type: string
      incident_type:
        example: "0"
        type: string
      latitude:
        example: "0"
        type: string
      longitude:
        example: "0"
        type: string
    type: object
  dto.UpdateRoleRequest:
    properties:
      id:
        type: integer
      role_name:
        type: string
    type: object
  dto.UpdateStatusRequest:
    properties:
      id:
        type: integer
      status_name:
        type: string
    type: object
  dto.UpdateTypeRequest:
    properties:
      id:
        type: integer
      type_name:
        type: string
    type: object
  dto.UpdateUserRequest:
    properties:
      email:
        type: string
      first_name:
        type: string
      id:
        type: integer
      last_name:
        type: string
      user_password:
        type: string
      user_role:
        type: integer
      username:
        type: string
    type: object
  dto.User:
    properties:
      email:
        type: string
      first_name:
        type: string
      id:
        type: integer
      last_name:
        type: string
      user_password:
        type: string
      user_role:
        type: integer
      username:
        type: string
    type: object
  dto.UserRole:
    properties:
      id:
        type: integer
      role_name:
        type: string
    type: object
  ginhttp.response:
    properties:
      message:
        type: string
    type: object
info:
  contact:
    email: ekaterinaamzr@gmail.com
  description: Swagger API for Golang Project Green Alarm.
  license:
    name: MIT
    url: https://github.com/MartinHeinz/go-project-blueprint/blob/master/LICENSE
  termsOfService: http://swagger.io/terms/
  title: Green Alarm
  version: "1.0"
paths:
  /auth/sign-in:
    post:
      consumes:
      - application/json
      description: Sign in
      parameters:
      - description: Login, password
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/dto.SignInRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dto.SignInResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/ginhttp.response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/ginhttp.response'
      summary: SignIn
      tags:
      - auth
  /auth/sign-up:
    post:
      consumes:
      - application/json
      description: Create account
      parameters:
      - description: New user info
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/dto.SignUpRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dto.SignUpResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/ginhttp.response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/ginhttp.response'
      summary: SignUp
      tags:
      - auth
  /incidents:
    get:
      description: Get list of incidents
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/dto.Incident'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/ginhttp.response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/ginhttp.response'
      summary: Get all
      tags:
      - Incidents
    post:
      consumes:
      - application/json
      description: Report an incident
      parameters:
      - description: New incident data
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/dto.CreateIncidentRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dto.CreateIncidentResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/ginhttp.response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/ginhttp.response'
      security:
      - ApiKeyAuth: []
      summary: Create
      tags:
      - Incidents
  /incidents/{id}:
    delete:
      description: Delete incident
      responses:
        "200":
          description: OK
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/ginhttp.response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/ginhttp.response'
      security:
      - ApiKeyAuth: []
      summary: Delete
      tags:
      - Incidents
    get:
      description: Get incident by id
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dto.GetIncidentByIdResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/ginhttp.response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/ginhttp.response'
      summary: Get by id
      tags:
      - Incidents
    put:
      consumes:
      - application/json
      description: Update incident
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: integer
      - description: Updated incident data
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/dto.UpdateIncidentRequest'
      responses:
        "200":
          description: OK
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/ginhttp.response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/ginhttp.response'
      security:
      - ApiKeyAuth: []
      summary: Update
      tags:
      - Incidents
  /roles:
    get:
      description: Get list of roles
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/dto.UserRole'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/ginhttp.response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/ginhttp.response'
      security:
      - ApiKeyAuth: []
      summary: Get all
      tags:
      - Roles
    post:
      consumes:
      - application/json
      description: Create role
      parameters:
      - description: New role data
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/dto.CreateRoleRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dto.CreateRoleResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/ginhttp.response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/ginhttp.response'
      security:
      - ApiKeyAuth: []
      summary: Create
      tags:
      - Roles
  /roles/{id}:
    delete:
      description: Delete role
      responses:
        "200":
          description: OK
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/ginhttp.response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/ginhttp.response'
      security:
      - ApiKeyAuth: []
      summary: Delete
      tags:
      - Roles
    get:
      description: Get role by id
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dto.GetRoleByIdResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/ginhttp.response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/ginhttp.response'
      security:
      - ApiKeyAuth: []
      summary: Get by id
      tags:
      - Roles
    put:
      consumes:
      - application/json
      description: Update role
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: integer
      - description: Updated role data
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/dto.UpdateRoleRequest'
      responses:
        "200":
          description: OK
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/ginhttp.response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/ginhttp.response'
      security:
      - ApiKeyAuth: []
      summary: Update
      tags:
      - Roles
  /statuses:
    get:
      description: Get list of statuses
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/dto.IncidentStatus'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/ginhttp.response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/ginhttp.response'
      security:
      - ApiKeyAuth: []
      summary: Get all
      tags:
      - Statuses
    post:
      consumes:
      - application/json
      description: Create status
      parameters:
      - description: New status data
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/dto.CreateStatusRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dto.CreateStatusResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/ginhttp.response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/ginhttp.response'
      security:
      - ApiKeyAuth: []
      summary: Create
      tags:
      - Statuses
  /statuses/{id}:
    delete:
      description: Delete status
      responses:
        "200":
          description: OK
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/ginhttp.response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/ginhttp.response'
      security:
      - ApiKeyAuth: []
      summary: Delete
      tags:
      - Statuses
    get:
      description: Get status by id
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dto.GetStatusByIdResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/ginhttp.response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/ginhttp.response'
      security:
      - ApiKeyAuth: []
      summary: Get by id
      tags:
      - Statuses
    put:
      consumes:
      - application/json
      description: Update status
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: integer
      - description: Updated status data
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/dto.UpdateStatusRequest'
      responses:
        "200":
          description: OK
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/ginhttp.response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/ginhttp.response'
      security:
      - ApiKeyAuth: []
      summary: Update
      tags:
      - Statuses
  /types:
    get:
      description: Get list of types
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/dto.IncidentType'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/ginhttp.response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/ginhttp.response'
      security:
      - ApiKeyAuth: []
      summary: Get all
      tags:
      - Types
    post:
      consumes:
      - application/json
      description: Create type
      parameters:
      - description: New type data
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/dto.CreateTypeRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dto.CreateTypeResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/ginhttp.response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/ginhttp.response'
      security:
      - ApiKeyAuth: []
      summary: Create
      tags:
      - Types
  /types/{id}:
    delete:
      description: Delete type
      responses:
        "200":
          description: OK
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/ginhttp.response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/ginhttp.response'
      security:
      - ApiKeyAuth: []
      summary: Delete
      tags:
      - Types
    get:
      description: Get type by id
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dto.GetTypeByIdResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/ginhttp.response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/ginhttp.response'
      security:
      - ApiKeyAuth: []
      summary: Get by id
      tags:
      - Types
    put:
      consumes:
      - application/json
      description: Update type
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: integer
      - description: Updated type data
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/dto.UpdateTypeRequest'
      responses:
        "200":
          description: OK
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/ginhttp.response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/ginhttp.response'
      security:
      - ApiKeyAuth: []
      summary: Update
      tags:
      - Types
  /users:
    get:
      description: Get list of users
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/dto.User'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/ginhttp.response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/ginhttp.response'
      security:
      - ApiKeyAuth: []
      summary: Get all
      tags:
      - Users
  /users/{id}:
    delete:
      description: Delete user
      responses:
        "200":
          description: OK
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/ginhttp.response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/ginhttp.response'
      security:
      - ApiKeyAuth: []
      summary: Delete
      tags:
      - Users
    get:
      description: Get user by id
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dto.GetUserByIdResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/ginhttp.response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/ginhttp.response'
      security:
      - ApiKeyAuth: []
      summary: Get by id
      tags:
      - Users
    patch:
      consumes:
      - application/json
      description: Change user role
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: integer
      - description: Updated user role
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/dto.ChangeRoleRequest'
      responses:
        "200":
          description: OK
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/ginhttp.response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/ginhttp.response'
      security:
      - ApiKeyAuth: []
      summary: Change role
      tags:
      - Users
    put:
      consumes:
      - application/json
      description: Update user
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: integer
      - description: Updated user data
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/dto.UpdateUserRequest'
      responses:
        "200":
          description: OK
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/ginhttp.response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/ginhttp.response'
      security:
      - ApiKeyAuth: []
      summary: Update
      tags:
      - Users
securityDefinitions:
  ApiKeyAuth:
    in: Bearer token
    name: Authorization
    type: apiKey
swagger: "2.0"
