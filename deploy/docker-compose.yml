version: '3.9'
services:
  app:
    # container_name: greenalarm
    image: server
    # build: ../server
    environment:
      PG_URL: 'postgres://greenalarm:greenalarm@postgresc:5432/greenalarm'
    expose:
      - 8080
    ports:
      - "8080:8080"
    restart: always
    depends_on:
      - postgres

  app_ro_1:
    # container_name: greenalarm_ro_1
    image: server
    # build: ../server
    environment:
      PG_URL: 'postgres://greenalarm:greenalarm@postgresc:5432/greenalarm'
    expose:
      - 8080
    restart: always
    depends_on:
      - postgres

  app_ro_2:
    # container_name: greenalarm_ro_2
    image: server
    # build: ../server
    environment:
      PG_URL: 'postgres://greenalarm:greenalarm@postgresc:5432/greenalarm'
    expose:
      - 8080
    restart: always
    depends_on:
      - postgres

  app_tmp:
    # container_name: greenalarm_tmp
    image: server
    # build: ../server
    environment:
      PG_URL: 'postgres://greenalarm:greenalarm@postgresc:5432/greenalarm'
      HTTP_BASE_PATH: "/mirror1"
    expose:
      - 8080
    restart: always
    depends_on:
      - postgres

  postgres:
    image: postgres:latest
    container_name: postgresc
    environment:
      - POSTGRES_USER=greenalarm
      - POSTGRES_PASSWORD=greenalarm
      - POSTGRES_DB=greenalarm
    ports:
      - "5432:5432"
    volumes:
      - ./initpg:/docker-entrypoint-initdb.d
      - pgdata:/var/lib/postgresql/data
      - ./csvs:/var/lib/postgresql/csvs
    restart: always

  nginx:
    image: macbre/nginx-http3:1.23.1
    depends_on:
      - app
    expose:
      - 80
    ports:
      - "80:80/tcp"
      - "80:80/udp"
    volumes:
      - ./nginx/greenalarm.conf:/etc/nginx/conf.d/default.conf
      - ./nginx/static:/static
      - ./nginx/cache/:/var/nginx/cache/

  client:
    image: client
    # build: ../client
    ports:
      - "3000:3000"
    restart: always
    depends_on:
      - app

volumes:
  pgdata:
  
